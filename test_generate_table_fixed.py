import requests
import json

# 原始数据（包含统计行）
raw_data = {
    "result": "[[\"\", \"2025-09-29\", \"\", \"\", \"\", \"\", \"\", \"2025-09-30\", \"\", \"\", \"\", \"\", \"\", \"2025-10-01\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"2025-10-02\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"2025-10-03\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"BROADCAST\", \"\", \"OPEN\", \"\", \"SOLVED\", \"\", \"BROADCAST\", \"\", \"OPEN\", \"\", \"SOLVED\", \"\", \"BROADCAST\", \"\", \"EXPIRED\", \"\", \"OPEN\", \"\", \"SOLVED\", \"\", \"BROADCAST\", \"\", \"EXPIRED\", \"\", \"OPEN\", \"\", \"SOLVED\", \"\", \"BROADCAST\", \"\", \"EXPIRED\", \"\", \"OPEN\", \"\", \"SOLVED\", \"\", \"\", \"\"], [\"agent_name\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"status_num\", \"percentage\", \"sum_status_num\", \"sum_percentage\"], [\"Anisyah Fitri\", \"\", \"\", \"\", \"\", \"11\", \"1\", \"\", \"\", \"\", \"\", \"9\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"15\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"11\", \"1\", \"\", \"\", \"1\", \"0.0556\", \"2\", \"0.1111\", \"15\", \"0.8333\", \"64\", \"5\"], [\"Bittang Julianus\", \"\", \"\", \"\", \"\", \"12\", \"1\", \"\", \"\", \"1\", \"0.2\", \"4\", \"0.8\", \"\", \"\", \"\", \"\", \"\", \"\", \"14\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"7\", \"1\", \"48\", \"5\"], [\"Lenggo Novelita\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"\", \"\", \"\", \"\", \"9\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"19\", \"2\"], [\"Melfi Juliani\", \"\", \"\", \"\", \"\", \"8\", \"1\", \"\", \"\", \"\", \"\", \"8\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"16\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"52\", \"5\"], [\"Melisa Siagian\", \"\", \"\", \"\", \"\", \"8\", \"1\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"12\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"\", \"\", \"1\", \"0.0769\", \"\", \"\", \"12\", \"0.9231\", \"53\", \"5\"], [\"Mesa Lestari\", \"\", \"\", \"1\", \"0.1\", \"9\", \"0.9\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"16\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"12\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"11\", \"1\", \"59\", \"5\"], [\"Nia Fiscarina\", \"\", \"\", \"\", \"\", \"7\", \"1\", \"\", \"\", \"1\", \"0.1111\", \"8\", \"0.8889\", \"\", \"\", \"1\", \"0.0588\", \"\", \"\", \"16\", \"0.9412\", \"\", \"\", \"\", \"\", \"\", \"\", \"12\", \"1\", \"\", \"\", \"\", \"\", \"1\", \"0.0909\", \"10\", \"0.9091\", \"56\", \"5\"], [\"Poppy Amiralda\", \"\", \"\", \"1\", \"0.0769\", \"12\", \"0.9231\", \"\", \"\", \"1\", \"0.1111\", \"8\", \"0.8889\", \"\", \"\", \"\", \"\", \"\", \"\", \"14\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"13\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"12\", \"1\", \"61\", \"5\"], [\"Utari Diani\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"\", \"\", \"\", \"\", \"10\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"18\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"12\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"9\", \"1\", \"59\", \"5\"], [\"Widia Ayu\", \"\", \"\", \"\", \"\", \"11\", \"1\", \"\", \"\", \"\", \"\", \"9\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"15\", \"1\", \"\", \"\", \"\", \"\", \"\", \"\", \"12\", \"1\", \"\", \"\", \"1\", \"0.0714\", \"\", \"\", \"13\", \"0.9286\", \"61\", \"5\"], [\"(空白)\", \"3347\", \"1\", \"\", \"\", \"\", \"\", \"3554\", \"0.9986\", \"5\", \"0.0014\", \"\", \"\", \"3272\", \"0.9994\", \"\", \"\", \"1\", \"0.0003\", \"1\", \"0.0003\", \"3530\", \"0.9992\", \"2\", \"0.0006\", \"1\", \"0.0003\", \"\", \"\", \"3596\", \"0.9994\", \"1\", \"0.0003\", \"1\", \"0.0003\", \"\", \"\", \"17311\", \"5.0001\"], [\"统计\", \"3347\", \"1\", \"2\", \"0.1769\", \"98\", \"9.8231\", \"3554\", \"0.9986\", \"8\", \"0.4236\", \"85\", \"9.5778\", \"3272\", \"0.9994\", \"1\", \"0.0588\", \"1\", \"0.0003\", \"137\", \"8.9415\", \"3530\", \"0.9992\", \"2\", \"0.0006\", \"1\", \"0.0003\", \"102\", \"9\", \"3596\", \"0.9994\", \"4\", \"0.2042\", \"4\", \"0.2023\", \"99\", \"8.5941\", \"17843\", \"52.0001\"]]"
}

# 解析字符串为二维数组
table_data = json.loads(raw_data["result"])

print(f"解析后的数据: {len(table_data)} 行 x {len(table_data[0])} 列")

# 直接使用原始的二维数组格式，保持三层表头结构
# 将前3行作为表头，后面的行作为数据
headers_and_data = table_data

# 包装成带sheet名的格式
request_data = {
    "Agent Statistics": headers_and_data
}

print(f"转换后的数据: {len(headers_and_data)} 行（前3行为表头，后{len(headers_and_data)-3}行为数据）")

# 调用 API
url = "http://localhost:5014/make-xlsx-bytes"

print(f"\n正在调用 {url}...")

try:
    response = requests.post(
        url, 
        json=request_data,
        headers={"Content-Type": "application/json"}
    )
    
    if response.status_code == 200:
        # 保存文件（带时间戳避免文件占用）
        from datetime import datetime
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        output_file = f"agent_statistics_multilevel_{timestamp}.xlsx"
        with open(output_file, "wb") as f:
            f.write(response.content)
        print(f"[OK] Excel 文件已生成: {output_file}")
        print(f"  文件大小: {len(response.content)} 字节")
    else:
        print(f"[ERROR] 请求失败: {response.status_code}")
        print(f"  错误信息: {response.text}")
        
except requests.exceptions.ConnectionError:
    print("[ERROR] 无法连接到服务器，请确保服务已启动")
    print("  运行命令: python app.py")
except Exception as e:
    print(f"[ERROR] 发生错误: {e}")
